package chaos

import (
	"bytes"
	"math/big"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/consensus/chaos/systemcontract"
	"github.com/stretchr/testify/require"
)

func TestBuildProposalExecutedEventData(t *testing.T) {
	testcases := []struct {
		prop   *systemcontract.Proposal
		expect []byte
	}{
		{&systemcontract.Proposal{
			Id:     big.NewInt(0),
			Action: big.NewInt(0),
			From:   common.Address{0xaa},
			To:     common.Address{0xbb},
			Value:  big.NewInt(1),
			Data:   common.Hex2Bytes("a9059cbb00000000000000000000000088e0231aedd860cd4b241ffa83ee944a9dfcd7b90000000000000000000000000000000000000000000000006e8ff610f77700ac"),
		}, common.Hex2Bytes("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044a9059cbb00000000000000000000000088e0231aedd860cd4b241ffa83ee944a9dfcd7b90000000000000000000000000000000000000000000000006e8ff610f77700ac00000000000000000000000000000000000000000000000000000000")},
		{&systemcontract.Proposal{
			Id:     big.NewInt(1),
			Action: big.NewInt(1),
			From:   common.Address{0xaa},
			To:     common.Address{0xbb},
			Value:  big.NewInt(1),
			Data:   common.Hex2Bytes("00000000000000000000000088e0231aedd860cd4b241ffa83ee944a9dfcd7b9"),
		}, common.Hex2Bytes("000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000002000000000000000000000000088e0231aedd860cd4b241ffa83ee944a9dfcd7b9")},
	}
	for i, tc := range testcases {
		got := buildProposalExecutedEventData(tc.prop)
		require.True(t, bytes.Equal(tc.expect, got), i)
	}

}
